@model CarCompare.Models.CompareListModel
<head>
    <!--Link to stylesheet-->
    <link href="~/Content/Site.css" rel="stylesheet" type="text/css" />



</head>


@{

    // --------------- button and result info ------------
    <p class="showingXresults">
        Showing 50 of @Model.GetArray().Length results:
    </p>

    <div class="buttonsField">
        @using (Html.BeginForm("HandleFilterButton", "Home"))
        {
            <button class="buttonF" type="submit" name="button" value="1">FILTER</button>
            <button class="buttonF" type="submit" name="button" value="2">RESET</button>
        }
    </div>

    //----------------- brand ----------------------
    <div class="dropdown">
        <input type="checkbox" id="checkbox-brands">
        <label class="dropdown-text buttonF2 buttonF" for="checkbox-brands">Brands</label>
        <ul class="dropdown-ul">
            @foreach (var brand in Model.Sort(Model.GetArray().ToList(), "brand").Select(brand => brand.Brand).Distinct())
            {
                <li class="dropdown-li">
                    <input type="checkbox" id="Brand @brand" name="Brand @brand" value="Brand @brand">
                    <label class="element-checkbox" for="Brand @brand">
                        <text class="entry" for="Brand @brand">@brand</text>
                    </label>
                </li>
            }
        </ul>
    </div>
    //----------------- RangeMin ----------------------
    <div class="dropdown">
        <input type="checkbox" id="checkbox-rangeMin">
        <label class="dropdown-text buttonF2 buttonF" for="checkbox-rangeMin">Minimal<br /> Range</label>
        <ul class="dropdown-ul">
            @for (int i = 90; i <= 700; i += 10)
            {
                <li class="dropdown-li">
                    <input type="checkbox" id="RangeMin @i" name="" value="RangeMin @i">
                    <label class="element-checkbox" for="RangeMin @i">
                        <text class="entry" for="RangeMin @i">@i km</text>
                    </label>
                </li>
            }
        </ul>
    </div>
    //----------------- Min Year of manufacture ----------------------
    <div class="dropdown">
        <input type="checkbox" id="checkbox-modelYearMin">
        <label class="dropdown-text buttonF2 buttonF" for="checkbox-modelYearMin">Minimal <br />Model Year</label>
        <ul class="dropdown-ul">

            @for (int i = 1990; i <= 2022; i++)
            {
                <li class="dropdown-li">
                    <input type="checkbox" id="ModelYearMin @i" name="" value="ModelYearMin @i">
                    <label class="element-checkbox" for="ModelYearMin @i">
                        <text class="entry" for="ModelYearMin @i">@i</text>
                    </label>
                </li>
            }
        </ul>
    </div>
    //----------------- Acceleration ----------------------
    <div class="dropdown">
        <input type="checkbox" id="checkbox-acceleration">
        <label class="dropdown-text buttonF2 buttonF" for="checkbox-acceleration">Acceleration   <br />0-100km/h</label>
        <ul class="dropdown-ul">
            @for (int i = 1; i < 16; i++)
            {
                <li class="dropdown-li">
                    <input type="checkbox" id="acceleration @i" name="" value="acceleration @i">
                    <label class="element-checkbox" for="acceleration @i">
                        <text class="entry" for="acceleration @i">@i sec</text>
                    </label>
                </li>
            }
        </ul>
    </div>
    //----------------- electric and hybrid --------
    <div class="dropdown" style="padding-bottom:25px">
        <div class="allElectric">
            <p>All electric</p>
            <label class="switch">
                <input type="checkbox">
                <span class="slider"></span>
            </label>

        </div>

        <div class="hybrid">
            <p>Hybrid</p>
            <label class="switch" style="left:32px;">
                <input type="checkbox">
                <span class="slider"></span>
            </label>
        </div>
    </div>
    //----------------- MaxRange ----------------------
    <div class="dropdown">
        <input type="checkbox" id="checkbox-rangeMax">
        <label class="dropdown-text buttonF2 buttonF" for="checkbox-rangeMax">Maximal<br /> Range</label>
        <ul class="dropdown-ul">
            @for (int i = 90; i < 710; i += 10)
            {
                <li class="dropdown-li">
                    <input type="checkbox" id="rangeMax @i" name="" value="rangeMax @i">
                    <label class="element-checkbox" for="rangeMax @i">
                        <text class="entry" for="rangeMax @i">@i km</text>
                    </label>
                </li>
            }
        </ul>
    </div>
    //----------------- Max year of manufacture ----------------------
    <div class="dropdown">
        <input type="checkbox" id="checkbox-modelYearMax">
        <label class="dropdown-text buttonF2 buttonF" for="checkbox-modelYearMax">Maximal <br />Model Year</label>
        <ul class="dropdown-ul">

            @for (int i = 1990; i <= 2022; i++)
            {
                <li class="dropdown-li">
                    <input type="checkbox" id="modelYearMax @i" name="" value="modelYearMax @i">
                    <label class="element-checkbox" for="modelYearMax @i">
                        <text class="entry" for="modelYearMax @i">@i</text>
                    </label>
                </li>
            }
        </ul>
    </div>
    //----------------- Number of seats ----------------------
    <div class="dropdown">
        <input type="checkbox" id="checkbox-seats">
        <label class="dropdown-text buttonF2 buttonF" for="checkbox-seats">Number <br />of seats</label>
        <ul class="dropdown-ul">

            @for (int i = 1; i <= 9; i++)
            {
                <li class="dropdown-li">
                    <input type="checkbox" id="seats @i" name="" value="seats @i">
                    <label class="element-checkbox" for="seats @i">
                        <text class="entry" for="seats @i">@i</text>
                    </label>
                </li>
            }
        </ul>
    </div>
}

<style>

    .entry {
        position: absolute;
        left: 35px;
        white-space: nowrap;
    }

    .dropdown-name {
        vertical-align: middle;
    }

    .element-checkbox {
        border-style: solid;
        width: 25px;
        height: 25px;
        margin: 5px;
        white-space: nowrap;
    }

    .dropdown {
        position: relative;
        display: inline-block;
        font-size: 16px;
        color: #FFF;
        width: 175px;
        margin: 15px;
        margin-left: 45px;
        margin-bottom: 0;

    }

    /**
        Hide the checkbox itself. Checking and unchecking
        it we will be done via the label element.
    */

    input[type=checkbox] {
        display: none;
    }

    /* Click to expand button */

    .dropdown-text {
        box-sizing: border-box;
        display: inline-block;
        width: 200%;
        height: 40px;
        cursor: pointer;
        display: inline-block;
        justify-content: center;
        box-shadow: 0 1px 1px rgba(0, 0, 0, 0.2);
        vertical-align: middle;
        white-space: nowrap;
    }

    label {
        box-sizing: border-box;
        display: inline-block;
        width: 100%;
        background-color: #FFF;
        padding: 1vw, 1vw;
        cursor: pointer;
        text-align: center;
        box-shadow: 0 1px 1px rgba(0, 0, 0, 0.2);
    }

    /*  The ul will have display:none by default */

    ul.dropdown-ul {
        position: absolute;
        list-style: none;
        text-align: left;
        width: inherit;
        margin: 0;
        padding: 0;
        display: none;
        max-height: 200px;
        overflow-y: scroll;
        border-style: solid;
        border-color: #282936;
        border-collapse: collapse;
        z-index:1;
    }

        ul.dropdown-ul li.dropdown-li {
            background-color: #FFF;
            color: #4FB9A7;
            cursor: pointer;
        }

            ul.dropdown-ul li.dropdown-li:hover {
                color: green;
            }



    /**

        By using the Following-sibling selector (~),
        we can target elements positioned after our checkbox in the DOM tree.

        With the state pseudo selector (:checked),
        we can make changes depending on the state of the checkbox.

        Using this combination of selectors
        allows to change the color of the label
        and show the list of items
        only when the checkbox is checked.

    */

    input[type=checkbox]:checked ~ label {
        background-color: black;
    }

    input[type=checkbox]:checked ~ ul.dropdown-ul {
        display: block;
    }

    @*------------------ SLIDER AND BUTTON ----------------*@

    .allElectric {
        display: flex;
        font-display:;
        font-size: 20px;
        font-weight: 200;
        color: black;
        font-weight: 500;
    }

    .hybrid {
        display: flex;
        font-display:;
        font-size: 20px;
        font-weight: 200;
        color: black;
        font-weight: 500;
    }

    /* The switch - the box around the slider */
    .switch {
        font-size: 15px;
        position: relative;
        display: inline-block;
        width: 3.5em;
        height: 1.5em;
        margin-left: 20px;
    }
        /* Hide default HTML checkbox */
        .switch input {
            opacity: 0;
            width: 0;
            height: 0;
        }
    /* The slider */
    .slider {
        position: absolute;
        cursor: pointer;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: #ccc;
        transition: .4s;
        border-radius: 1rem 0rem 1rem;
    }

        .slider:before {
            position: absolute;
            content: "";
            height: 1.5em;
            width: 1.4em;
            left: 0em;
            bottom: 0em;
            background-color: white;
            transition: .4s;
            border-radius: 1rem 0rem 1rem;
            border: 3px solid white;
        }

    input:checked + .slider {
        background-color: #72eb67;
    }

    input:focus + .slider {
        box-shadow: 0 0 1px #2196F3;
    }

    input:checked + .slider:before {
        transform: translateX(2.2em);
        background-color: green;
        box-shadow: 0px 0px 40px 5px #72eb67;
        border: 3px solid white;
    }

    input:checked + .slider::after {
        content: "|";
        color: white;
        position: absolute;
        right: 0.3rem;
        transform: rotate(45deg);
    }

    /*Filter and Reset button*/
    .buttonF {
        padding: 0.25vw 2vw 0.25vw;
        font-size: 12px;
        text-transform: uppercase;
        letter-spacing: 2.5px;
        font-weight: 400;
        color: white;
        background: #282936;
        border-radius: 0.3vw;
        box-shadow: 0px 8px 15px rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease 0s;
        position: center;
    }

        .buttonF:hover, button:active {
            -webkit-transform: translate(0px,5px);
            -ms-transform: translate(0px,5px);
            transform: translate(0px,5px);
            border-bottom: 1px solid #2ecc71;
        }
        .buttonF2:hover, button:active {
            -webkit-transform: translate(0px,-5px);
            -ms-transform: translate(0px,-5px);
            transform: translate(0px,-5px);
        }
</style>

